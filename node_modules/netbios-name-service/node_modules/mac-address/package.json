{
  "name": "mac-address",
  "description": "MAC address parsing functions",
  "keywords": [
    "ethernet",
    "mac",
    "address",
    "binary",
    "parse"
  ],
  "version": "0.2.0",
  "author": {
    "name": "Ben Kelly",
    "email": "ben@wanderview.com"
  },
  "license": "BSD",
  "dependencies": {},
  "devDependencies": {
    "nodeunit": "~0.7.4"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:wanderview/node-mac-address.git"
  },
  "scripts": {
    "test": "nodeunit test"
  },
  "main": "mac.js",
  "readme": "# mac-address\n\nMAC address parsing functions.\n\n[![Build Status](https://travis-ci.org/wanderview/node-mac-address.png)](https://travis-ci.org/wanderview/node-mac-address)\n\n## Example\n\n```javascript\nvar mac = require('mac-address');\nvar bufferEqual = require('buffer-equal');\n\nvar string = '11:22:33:44:55:66';\nvar buffer = new Buffer([0x11, 0x22, 0x33, 0x44, 0x55, 0x66]);\n\n// basics\nmac.LENGTH === 6;                           // true\nmac.toString(buffer) === string;            // true\nbufferEqual(mac.toBuffer(string), buffer);  // true\n\nvar longBuffer = new Buffer(1024);\nvar offset = 512;\n\n// write directly into an existing buffer\nmac.toBuffer(string, longBuffer, offset);\n\n// parse out of the middle of a buffer\nmac.toString(longBuffer, offset);\n\n// exceptions\nmac.toString(new Buffer(mac.LENGTH - 1));   // throws illegal length Error\nmac.toBuffer('zz:xx::b:blarg');             // throws illegal format Error\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/wanderview/node-mac-address/issues"
  },
  "homepage": "https://github.com/wanderview/node-mac-address",
  "_id": "mac-address@0.2.0",
  "_from": "mac-address@~0.2.0"
}
