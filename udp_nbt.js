/**
 * Created by Administrator on 2014/6/9 0009.
 */
//var buffer = new Buffer([ 0x0,0x01,0x0,0x10,0x0,0x1,0x0,0x0,0x0,0x0,0x0,0x0,0x20,0x43,0x4b,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x0,0x0,0x21,0x0,0x1 ]);
const nbns_req = new Buffer([0x20,0xBB,0x0,0x10,0x0,0x1,0x0,0x0,0x0,0x0,0x0,0x0,0x20,0x43,0x4b,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x0,0x0,0x21,0x0,0x1]);
const negotiate_req = new Buffer([0xff ,0x53 ,0x4d ,0x42 ,0x72 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x5c ,0x02 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x0c ,0x00 ,0x02 ,0x4e ,0x54 ,0x20 ,0x4c ,0x4d ,0x20 ,0x30 ,0x2e ,0x31 ,0x32, 0x00]);
const setup_acc_req = new Buffer([0xff ,0x53 ,0x4d ,0x42 ,0x73 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x5c ,0x02 ,0x00 ,0x00 ,0x00 ,0x00 ,0x0d ,0xff ,0x00 ,0x00 ,0x00 ,0xff ,0xff ,0x02 ,0x00 ,0x5c ,0x02 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x0b ,0x00 ,0x00 ,0x00 ,0x6e ,0x74 ,0x00 ,0x70 ,0x79 ,0x73 ,0x6d ,0x62, 0x00]);
const len_header = 12;
const len_ans = 45;
const len_name_flag = 18;

console.log(negotiate_req);

var dgram = require("dgram");
var server = dgram.createSocket("udp4");

var NBName = require('netbios-name');
var NBSession = require('netbios-session');

var domain = require('domain');

function afp_over_tcp(hostip)
{

}

function nbt_over_tcp(hostname, hostip)
{
    var queryName = new NBName({name: hostname,
                                suffix: 0x20});
    var myName = new NBName({name: 'test',
                                suffix: 0x20});
    var ssn = new NBSession();
    var d = domain.create();

    d.on('error', function(err) {
        //console.log('Error caught by domain:', err);
        if(err.code == 'ECONNREFUSED')
        {
            console.log('host:', err.domainEmitter._host);
        }
        else
        {
            throw err;
        }
    });

    d.run(function () {
            console.log(hostip);
            ssn.connect(139, hostip, myName,queryName,function () {
                console.log('ddddd');
                ssn.write(negotiate_req, function()
                {
                    console.log('negotiated!');
                })
            });
            ssn.on('message', function (msg) {
                console.log('received:' + msg);
                ssn.write(setup_acc_req, function()
                {
                    console.log('zzzzz');
                });
            });
            ssn.on('error', function(err){
                console.log(err);
            });
            ssn.on('end', function(end){
                console.log('the end');
            });
    });
}

server.on("error", function (err)
{
    console.log("server error:\n" + err.stack);
    server.close();
});

server.on("message", function (msg, rinfo)
{
    console.log("server got: " + msg + " from " +
        rinfo.address + ":" + rinfo.port);
    rcv_buf = new Buffer(msg);
    var name_cnt = rcv_buf.readUInt8(56);
    var offset = 0;
    for(var i = 0; i < name_cnt; i++)
    {
        offset = i * len_name_flag + len_header + len_ans;
        suffix = rcv_buf.readUInt8(offset + 15);
        flag = rcv_buf.readUInt8(offset + 16);
        if((flag & 0x80) == 0 && suffix == 0) {
            var machine_name = rcv_buf.toString('UTF8', offset, offset+15);
        }
    }
    console.log(machine_name);
    nbt_over_tcp(machine_name, rinfo.address);
});

server.on("listening", function ()
{
    var address = server.address();
    console.log("server listening " +
        address.address + ":" + address.port);
});

server.send(nbns_req, 0, nbns_req.length, 137, '192.168.9.5');
